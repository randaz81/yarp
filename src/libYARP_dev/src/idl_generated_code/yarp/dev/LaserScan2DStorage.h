/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_STRUCT_LASERSCAN2DSTORAGE_H
#define YARP_THRIFT_GENERATOR_STRUCT_LASERSCAN2DSTORAGE_H

#include <yarp/dev/api.h>

#include <cstdint>
#include <cstdio>
#include <map>
#include <set>
#include <string>
#include <vector>

namespace yarp::dev {

class YARP_dev_API LaserScan2DStorage
{
public:
    // Fields
    /**
     * first angle of the scan [deg]
     */
    double angle_min{0.0};
    /**
     * last angle of the scan [deg]
     */
    double angle_max{0.0};
    /**
     * the minimum distance of the scan [m]
     */
    double range_min{0.0};
    /**
     * the maximum distance of the scan [m]
     */
    double range_max{0.0};
    /**
     * the scan data, measured in [m]. The angular increment of each ray is obtained by (angle_max-angle_min)/num_of_elements. Invalid data are represented as std::inf.
     */
    std::vector<double> scans{};
    std::int32_t status{0};

    // Default constructor
    LaserScan2DStorage() = default;

    // Constructor with field values
    LaserScan2DStorage(const double angle_min,
                       const double angle_max,
                       const double range_min,
                       const double range_max,
                       const std::vector<double>& scans,
                       const std::int32_t status);

};

} // namespace yarp::dev

#endif // YARP_THRIFT_GENERATOR_STRUCT_LASERSCAN2DSTORAGE_H
