/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#include <yarp/dev/OdometryData6DSerializer.h>

namespace yarp::dev {

// Read structure on a Wire
bool OdometryData6DSerializer::read(yarp::os::idl::WireReader& reader)
{
    if (!read_odom_x(reader)) {
        return false;
    }
    if (!read_odom_y(reader)) {
        return false;
    }
    if (!read_odom_z(reader)) {
        return false;
    }
    if (!read_odom_roll(reader)) {
        return false;
    }
    if (!read_odom_pitch(reader)) {
        return false;
    }
    if (!read_odom_yaw(reader)) {
        return false;
    }
    if (!read_base_vel_x(reader)) {
        return false;
    }
    if (!read_base_vel_y(reader)) {
        return false;
    }
    if (!read_base_vel_z(reader)) {
        return false;
    }
    if (!read_base_vel_roll(reader)) {
        return false;
    }
    if (!read_base_vel_pitch(reader)) {
        return false;
    }
    if (!read_base_vel_yaw(reader)) {
        return false;
    }
    if (!read_odom_vel_x(reader)) {
        return false;
    }
    if (!read_odom_vel_y(reader)) {
        return false;
    }
    if (!read_odom_vel_z(reader)) {
        return false;
    }
    if (!read_odom_vel_roll(reader)) {
        return false;
    }
    if (!read_odom_vel_pitch(reader)) {
        return false;
    }
    if (!read_odom_vel_yaw(reader)) {
        return false;
    }
    if (reader.isError()) {
        return false;
    }
    return true;
}

// Read structure on a Connection
bool OdometryData6DSerializer::read(yarp::os::ConnectionReader& connection)
{
    yarp::os::idl::WireReader reader(connection);
    if (!reader.readListHeader(18)) {
        return false;
    }
    if (!read(reader)) {
        return false;
    }
    return true;
}

// Write structure on a Wire
bool OdometryData6DSerializer::write(const yarp::os::idl::WireWriter& writer) const
{
    if (!write_odom_x(writer)) {
        return false;
    }
    if (!write_odom_y(writer)) {
        return false;
    }
    if (!write_odom_z(writer)) {
        return false;
    }
    if (!write_odom_roll(writer)) {
        return false;
    }
    if (!write_odom_pitch(writer)) {
        return false;
    }
    if (!write_odom_yaw(writer)) {
        return false;
    }
    if (!write_base_vel_x(writer)) {
        return false;
    }
    if (!write_base_vel_y(writer)) {
        return false;
    }
    if (!write_base_vel_z(writer)) {
        return false;
    }
    if (!write_base_vel_roll(writer)) {
        return false;
    }
    if (!write_base_vel_pitch(writer)) {
        return false;
    }
    if (!write_base_vel_yaw(writer)) {
        return false;
    }
    if (!write_odom_vel_x(writer)) {
        return false;
    }
    if (!write_odom_vel_y(writer)) {
        return false;
    }
    if (!write_odom_vel_z(writer)) {
        return false;
    }
    if (!write_odom_vel_roll(writer)) {
        return false;
    }
    if (!write_odom_vel_pitch(writer)) {
        return false;
    }
    if (!write_odom_vel_yaw(writer)) {
        return false;
    }
    if (writer.isError()) {
        return false;
    }
    return true;
}

// Write structure on a Connection
bool OdometryData6DSerializer::write(yarp::os::ConnectionWriter& connection) const
{
    yarp::os::idl::WireWriter writer(connection);
    if (!writer.writeListHeader(18)) {
        return false;
    }
    if (!write(writer)) {
        return false;
    }
    return true;
}

// Convert to a printable string
std::string OdometryData6DSerializer::toString() const
{
    yarp::os::Bottle b;
    if (!yarp::os::Portable::copyPortable(*this, b)) {
        return {};
    }
    return b.toString();
}

// read odom_x field
bool OdometryData6DSerializer::read_odom_x(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_x)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_x field
bool OdometryData6DSerializer::write_odom_x(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_x)) {
        return false;
    }
    return true;
}

// read (nested) odom_x field
bool OdometryData6DSerializer::nested_read_odom_x(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_x)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_x field
bool OdometryData6DSerializer::nested_write_odom_x(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_x)) {
        return false;
    }
    return true;
}

// read odom_y field
bool OdometryData6DSerializer::read_odom_y(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_y)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_y field
bool OdometryData6DSerializer::write_odom_y(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_y)) {
        return false;
    }
    return true;
}

// read (nested) odom_y field
bool OdometryData6DSerializer::nested_read_odom_y(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_y)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_y field
bool OdometryData6DSerializer::nested_write_odom_y(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_y)) {
        return false;
    }
    return true;
}

// read odom_z field
bool OdometryData6DSerializer::read_odom_z(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_z)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_z field
bool OdometryData6DSerializer::write_odom_z(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_z)) {
        return false;
    }
    return true;
}

// read (nested) odom_z field
bool OdometryData6DSerializer::nested_read_odom_z(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_z)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_z field
bool OdometryData6DSerializer::nested_write_odom_z(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_z)) {
        return false;
    }
    return true;
}

// read odom_roll field
bool OdometryData6DSerializer::read_odom_roll(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_roll)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_roll field
bool OdometryData6DSerializer::write_odom_roll(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_roll)) {
        return false;
    }
    return true;
}

// read (nested) odom_roll field
bool OdometryData6DSerializer::nested_read_odom_roll(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_roll)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_roll field
bool OdometryData6DSerializer::nested_write_odom_roll(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_roll)) {
        return false;
    }
    return true;
}

// read odom_pitch field
bool OdometryData6DSerializer::read_odom_pitch(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_pitch)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_pitch field
bool OdometryData6DSerializer::write_odom_pitch(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_pitch)) {
        return false;
    }
    return true;
}

// read (nested) odom_pitch field
bool OdometryData6DSerializer::nested_read_odom_pitch(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_pitch)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_pitch field
bool OdometryData6DSerializer::nested_write_odom_pitch(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_pitch)) {
        return false;
    }
    return true;
}

// read odom_yaw field
bool OdometryData6DSerializer::read_odom_yaw(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_yaw)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_yaw field
bool OdometryData6DSerializer::write_odom_yaw(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_yaw)) {
        return false;
    }
    return true;
}

// read (nested) odom_yaw field
bool OdometryData6DSerializer::nested_read_odom_yaw(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_yaw)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_yaw field
bool OdometryData6DSerializer::nested_write_odom_yaw(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_yaw)) {
        return false;
    }
    return true;
}

// read base_vel_x field
bool OdometryData6DSerializer::read_base_vel_x(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_x)) {
        reader.fail();
        return false;
    }
    return true;
}

// write base_vel_x field
bool OdometryData6DSerializer::write_base_vel_x(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_x)) {
        return false;
    }
    return true;
}

// read (nested) base_vel_x field
bool OdometryData6DSerializer::nested_read_base_vel_x(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_x)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) base_vel_x field
bool OdometryData6DSerializer::nested_write_base_vel_x(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_x)) {
        return false;
    }
    return true;
}

// read base_vel_y field
bool OdometryData6DSerializer::read_base_vel_y(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_y)) {
        reader.fail();
        return false;
    }
    return true;
}

// write base_vel_y field
bool OdometryData6DSerializer::write_base_vel_y(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_y)) {
        return false;
    }
    return true;
}

// read (nested) base_vel_y field
bool OdometryData6DSerializer::nested_read_base_vel_y(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_y)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) base_vel_y field
bool OdometryData6DSerializer::nested_write_base_vel_y(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_y)) {
        return false;
    }
    return true;
}

// read base_vel_z field
bool OdometryData6DSerializer::read_base_vel_z(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_z)) {
        reader.fail();
        return false;
    }
    return true;
}

// write base_vel_z field
bool OdometryData6DSerializer::write_base_vel_z(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_z)) {
        return false;
    }
    return true;
}

// read (nested) base_vel_z field
bool OdometryData6DSerializer::nested_read_base_vel_z(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_z)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) base_vel_z field
bool OdometryData6DSerializer::nested_write_base_vel_z(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_z)) {
        return false;
    }
    return true;
}

// read base_vel_roll field
bool OdometryData6DSerializer::read_base_vel_roll(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_roll)) {
        reader.fail();
        return false;
    }
    return true;
}

// write base_vel_roll field
bool OdometryData6DSerializer::write_base_vel_roll(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_roll)) {
        return false;
    }
    return true;
}

// read (nested) base_vel_roll field
bool OdometryData6DSerializer::nested_read_base_vel_roll(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_roll)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) base_vel_roll field
bool OdometryData6DSerializer::nested_write_base_vel_roll(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_roll)) {
        return false;
    }
    return true;
}

// read base_vel_pitch field
bool OdometryData6DSerializer::read_base_vel_pitch(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_pitch)) {
        reader.fail();
        return false;
    }
    return true;
}

// write base_vel_pitch field
bool OdometryData6DSerializer::write_base_vel_pitch(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_pitch)) {
        return false;
    }
    return true;
}

// read (nested) base_vel_pitch field
bool OdometryData6DSerializer::nested_read_base_vel_pitch(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_pitch)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) base_vel_pitch field
bool OdometryData6DSerializer::nested_write_base_vel_pitch(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_pitch)) {
        return false;
    }
    return true;
}

// read base_vel_yaw field
bool OdometryData6DSerializer::read_base_vel_yaw(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_yaw)) {
        reader.fail();
        return false;
    }
    return true;
}

// write base_vel_yaw field
bool OdometryData6DSerializer::write_base_vel_yaw(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_yaw)) {
        return false;
    }
    return true;
}

// read (nested) base_vel_yaw field
bool OdometryData6DSerializer::nested_read_base_vel_yaw(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->base_vel_yaw)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) base_vel_yaw field
bool OdometryData6DSerializer::nested_write_base_vel_yaw(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->base_vel_yaw)) {
        return false;
    }
    return true;
}

// read odom_vel_x field
bool OdometryData6DSerializer::read_odom_vel_x(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_x)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_vel_x field
bool OdometryData6DSerializer::write_odom_vel_x(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_x)) {
        return false;
    }
    return true;
}

// read (nested) odom_vel_x field
bool OdometryData6DSerializer::nested_read_odom_vel_x(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_x)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_vel_x field
bool OdometryData6DSerializer::nested_write_odom_vel_x(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_x)) {
        return false;
    }
    return true;
}

// read odom_vel_y field
bool OdometryData6DSerializer::read_odom_vel_y(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_y)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_vel_y field
bool OdometryData6DSerializer::write_odom_vel_y(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_y)) {
        return false;
    }
    return true;
}

// read (nested) odom_vel_y field
bool OdometryData6DSerializer::nested_read_odom_vel_y(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_y)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_vel_y field
bool OdometryData6DSerializer::nested_write_odom_vel_y(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_y)) {
        return false;
    }
    return true;
}

// read odom_vel_z field
bool OdometryData6DSerializer::read_odom_vel_z(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_z)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_vel_z field
bool OdometryData6DSerializer::write_odom_vel_z(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_z)) {
        return false;
    }
    return true;
}

// read (nested) odom_vel_z field
bool OdometryData6DSerializer::nested_read_odom_vel_z(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_z)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_vel_z field
bool OdometryData6DSerializer::nested_write_odom_vel_z(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_z)) {
        return false;
    }
    return true;
}

// read odom_vel_roll field
bool OdometryData6DSerializer::read_odom_vel_roll(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_roll)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_vel_roll field
bool OdometryData6DSerializer::write_odom_vel_roll(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_roll)) {
        return false;
    }
    return true;
}

// read (nested) odom_vel_roll field
bool OdometryData6DSerializer::nested_read_odom_vel_roll(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_roll)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_vel_roll field
bool OdometryData6DSerializer::nested_write_odom_vel_roll(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_roll)) {
        return false;
    }
    return true;
}

// read odom_vel_pitch field
bool OdometryData6DSerializer::read_odom_vel_pitch(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_pitch)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_vel_pitch field
bool OdometryData6DSerializer::write_odom_vel_pitch(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_pitch)) {
        return false;
    }
    return true;
}

// read (nested) odom_vel_pitch field
bool OdometryData6DSerializer::nested_read_odom_vel_pitch(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_pitch)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_vel_pitch field
bool OdometryData6DSerializer::nested_write_odom_vel_pitch(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_pitch)) {
        return false;
    }
    return true;
}

// read odom_vel_yaw field
bool OdometryData6DSerializer::read_odom_vel_yaw(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_yaw)) {
        reader.fail();
        return false;
    }
    return true;
}

// write odom_vel_yaw field
bool OdometryData6DSerializer::write_odom_vel_yaw(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_yaw)) {
        return false;
    }
    return true;
}

// read (nested) odom_vel_yaw field
bool OdometryData6DSerializer::nested_read_odom_vel_yaw(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readFloat64(mStorage->odom_vel_yaw)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) odom_vel_yaw field
bool OdometryData6DSerializer::nested_write_odom_vel_yaw(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeFloat64(mStorage->odom_vel_yaw)) {
        return false;
    }
    return true;
}

} // namespace yarp::dev
