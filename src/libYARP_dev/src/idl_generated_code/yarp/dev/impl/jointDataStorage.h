/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_STRUCT_JOINTDATASTORAGE_H
#define YARP_THRIFT_GENERATOR_STRUCT_JOINTDATASTORAGE_H

#include <yarp/dev/api.h>

#include <cstdint>
#include <cstdio>
#include <map>
#include <set>
#include <string>
#include <vector>

namespace yarp::dev::impl {

class YARP_dev_API jointDataStorage
{
public:
    // Fields
    std::vector<double> jointPosition{};
    bool jointPosition_isValid{false};
    std::vector<double> jointVelocity{};
    bool jointVelocity_isValid{false};
    std::vector<double> jointAcceleration{};
    bool jointAcceleration_isValid{false};
    std::vector<double> motorPosition{};
    bool motorPosition_isValid{false};
    std::vector<double> motorVelocity{};
    bool motorVelocity_isValid{false};
    std::vector<double> motorAcceleration{};
    bool motorAcceleration_isValid{false};
    std::vector<double> torque{};
    bool torque_isValid{false};
    std::vector<double> pwmDutycycle{};
    bool pwmDutycycle_isValid{false};
    std::vector<double> current{};
    bool current_isValid{false};
    std::vector<std::int32_t> controlMode{};
    bool controlMode_isValid{false};
    std::vector<std::int32_t> interactionMode{};
    bool interactionMode_isValid{false};

    // Default constructor
    jointDataStorage() = default;

    // Constructor with field values
    jointDataStorage(const std::vector<double>& jointPosition,
                     const bool jointPosition_isValid,
                     const std::vector<double>& jointVelocity,
                     const bool jointVelocity_isValid,
                     const std::vector<double>& jointAcceleration,
                     const bool jointAcceleration_isValid,
                     const std::vector<double>& motorPosition,
                     const bool motorPosition_isValid,
                     const std::vector<double>& motorVelocity,
                     const bool motorVelocity_isValid,
                     const std::vector<double>& motorAcceleration,
                     const bool motorAcceleration_isValid,
                     const std::vector<double>& torque,
                     const bool torque_isValid,
                     const std::vector<double>& pwmDutycycle,
                     const bool pwmDutycycle_isValid,
                     const std::vector<double>& current,
                     const bool current_isValid,
                     const std::vector<std::int32_t>& controlMode,
                     const bool controlMode_isValid,
                     const std::vector<std::int32_t>& interactionMode,
                     const bool interactionMode_isValid);

};

} // namespace yarp::dev::impl

#endif // YARP_THRIFT_GENERATOR_STRUCT_JOINTDATASTORAGE_H
