/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#include <IRGBDMsgs_return_getImages.h>

// Constructor with field values
IRGBDMsgs_return_getImages::IRGBDMsgs_return_getImages(const yarp::dev::ReturnValue& ret,
                                                       const yarp::sig::FlexImage& rgbimg,
                                                       const yarp::sig::ImageOf<yarp::sig::PixelFloat>& depthimg,
                                                       const yarp::os::Stamp& rgbstamp,
                                                       const yarp::os::Stamp& depthstamp) :
        WirePortable(),
        ret(ret),
        rgbimg(rgbimg),
        depthimg(depthimg),
        rgbstamp(rgbstamp),
        depthstamp(depthstamp)
{
}

// Read structure on a Wire
bool IRGBDMsgs_return_getImages::read(yarp::os::idl::WireReader& reader)
{
    if (!nested_read_ret(reader)) {
        return false;
    }
    if (!nested_read_rgbimg(reader)) {
        return false;
    }
    if (!nested_read_depthimg(reader)) {
        return false;
    }
    if (!nested_read_rgbstamp(reader)) {
        return false;
    }
    if (!nested_read_depthstamp(reader)) {
        return false;
    }
    if (reader.isError()) {
        return false;
    }
    return true;
}

// Read structure on a Connection
bool IRGBDMsgs_return_getImages::read(yarp::os::ConnectionReader& connection)
{
    yarp::os::idl::WireReader reader(connection);
    if (!reader.readListHeader(5)) {
        return false;
    }
    if (!read(reader)) {
        return false;
    }
    return true;
}

// Write structure on a Wire
bool IRGBDMsgs_return_getImages::write(const yarp::os::idl::WireWriter& writer) const
{
    if (!nested_write_ret(writer)) {
        return false;
    }
    if (!nested_write_rgbimg(writer)) {
        return false;
    }
    if (!nested_write_depthimg(writer)) {
        return false;
    }
    if (!nested_write_rgbstamp(writer)) {
        return false;
    }
    if (!nested_write_depthstamp(writer)) {
        return false;
    }
    if (writer.isError()) {
        return false;
    }
    return true;
}

// Write structure on a Connection
bool IRGBDMsgs_return_getImages::write(yarp::os::ConnectionWriter& connection) const
{
    yarp::os::idl::WireWriter writer(connection);
    if (!writer.writeListHeader(5)) {
        return false;
    }
    if (!write(writer)) {
        return false;
    }
    return true;
}

// Convert to a printable string
std::string IRGBDMsgs_return_getImages::toString() const
{
    yarp::os::Bottle b;
    if (!yarp::os::Portable::copyPortable(*this, b)) {
        return {};
    }
    return b.toString();
}

// read ret field
bool IRGBDMsgs_return_getImages::read_ret(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.read(ret)) {
        reader.fail();
        return false;
    }
    return true;
}

// write ret field
bool IRGBDMsgs_return_getImages::write_ret(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.write(ret)) {
        return false;
    }
    return true;
}

// read (nested) ret field
bool IRGBDMsgs_return_getImages::nested_read_ret(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readNested(ret)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) ret field
bool IRGBDMsgs_return_getImages::nested_write_ret(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeNested(ret)) {
        return false;
    }
    return true;
}

// read rgbimg field
bool IRGBDMsgs_return_getImages::read_rgbimg(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.read(rgbimg)) {
        reader.fail();
        return false;
    }
    return true;
}

// write rgbimg field
bool IRGBDMsgs_return_getImages::write_rgbimg(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.write(rgbimg)) {
        return false;
    }
    return true;
}

// read (nested) rgbimg field
bool IRGBDMsgs_return_getImages::nested_read_rgbimg(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readNested(rgbimg)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) rgbimg field
bool IRGBDMsgs_return_getImages::nested_write_rgbimg(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeNested(rgbimg)) {
        return false;
    }
    return true;
}

// read depthimg field
bool IRGBDMsgs_return_getImages::read_depthimg(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.read(depthimg)) {
        reader.fail();
        return false;
    }
    return true;
}

// write depthimg field
bool IRGBDMsgs_return_getImages::write_depthimg(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.write(depthimg)) {
        return false;
    }
    return true;
}

// read (nested) depthimg field
bool IRGBDMsgs_return_getImages::nested_read_depthimg(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readNested(depthimg)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) depthimg field
bool IRGBDMsgs_return_getImages::nested_write_depthimg(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeNested(depthimg)) {
        return false;
    }
    return true;
}

// read rgbstamp field
bool IRGBDMsgs_return_getImages::read_rgbstamp(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.read(rgbstamp)) {
        reader.fail();
        return false;
    }
    return true;
}

// write rgbstamp field
bool IRGBDMsgs_return_getImages::write_rgbstamp(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.write(rgbstamp)) {
        return false;
    }
    return true;
}

// read (nested) rgbstamp field
bool IRGBDMsgs_return_getImages::nested_read_rgbstamp(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readNested(rgbstamp)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) rgbstamp field
bool IRGBDMsgs_return_getImages::nested_write_rgbstamp(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeNested(rgbstamp)) {
        return false;
    }
    return true;
}

// read depthstamp field
bool IRGBDMsgs_return_getImages::read_depthstamp(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.read(depthstamp)) {
        reader.fail();
        return false;
    }
    return true;
}

// write depthstamp field
bool IRGBDMsgs_return_getImages::write_depthstamp(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.write(depthstamp)) {
        return false;
    }
    return true;
}

// read (nested) depthstamp field
bool IRGBDMsgs_return_getImages::nested_read_depthstamp(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readNested(depthstamp)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) depthstamp field
bool IRGBDMsgs_return_getImages::nested_write_depthstamp(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeNested(depthstamp)) {
        return false;
    }
    return true;
}
