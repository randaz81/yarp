/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_SERVICE_ILOCALIZATION2DRPC_H
#define YARP_THRIFT_GENERATOR_SERVICE_ILOCALIZATION2DRPC_H

#include <yarp/os/Wire.h>
#include <yarp/os/idl/WireTypes.h>
#include <return_getCurrentPositionRPC1.h>
#include <return_getCurrentPositionRPC2.h>
#include <return_getEstimatedOdometryRPC.h>
#include <return_getEstimatedPosesRPC.h>
#include <return_getLocalizationStatusRPC.h>
#include <yarp/dev/Map2DLocation.h>
#include <yarp/sig/Matrix.h>

class ILocalization2DRPC :
        public yarp::os::Wire
{
public:
    // Constructor
    ILocalization2DRPC();

    virtual bool startLocalizationServiceRPC();

    virtual bool stopLocalizationServiceRPC();

    virtual return_getLocalizationStatusRPC getLocalizationStatusRPC();

    virtual return_getEstimatedPosesRPC getEstimatedPosesRPC();

    virtual return_getCurrentPositionRPC1 getCurrentPositionRPC1();

    virtual return_getCurrentPositionRPC2 getCurrentPositionRPC2();

    virtual return_getEstimatedOdometryRPC getEstimatedOdometryRPC();

    virtual bool setInitialPoseRPC1(const yarp::dev::Nav2D::Map2DLocation& loc);

    virtual bool setInitialPoseRPC2(const yarp::dev::Nav2D::Map2DLocation& loc, const yarp::sig::Matrix& cov);

    // help method
    virtual std::vector<std::string> help(const std::string& functionName = "--all");

    // read from ConnectionReader
    bool read(yarp::os::ConnectionReader& connection) override;
};

#endif // YARP_THRIFT_GENERATOR_SERVICE_ILOCALIZATION2DRPC_H
